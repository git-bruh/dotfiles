colorscheme catppuccin_mocha

set global tabstop 4

add-highlighter global/ show-matching
add-highlighter global/ number-lines

map global user P '!waypaste<ret>' # Paste before
map global user p '<a-!>waypaste<ret>' # Paste after
map global user R '|waypaste<ret>' # Replace selection

enable-auto-pairs
set-option global auto_pairs ( ) { } [ ] '"' '"' "'" "'" ` ` “ ” ‘ ’ « » ‹ ›

eval %sh{kak-lsp --kakoune -s $kak_session}

hook global WinSetOption filetype=(rust|python|go|javascript|typescript|c|cpp|dart|html|css|json) %{
    lsp-enable-window

    lsp-inlay-hints-enable global
    lsp-inlay-diagnostics-enable global

    map global user l %{:enter-user-mode lsp<ret>} -docstring "LSP mode"
    map global insert <tab> '<a-;>:try lsp-snippets-select-next-placeholders catch %{ execute-keys -with-hooks <lt>tab> }<ret>' -docstring 'Select next snippet placeholder'
    map global object a '<a-semicolon>lsp-object<ret>' -docstring 'LSP any symbol'
    map global object <a-a> '<a-semicolon>lsp-object<ret>' -docstring 'LSP any symbol'
    map global object e '<a-semicolon>lsp-object Function Method<ret>' -docstring 'LSP function or method'
    map global object k '<a-semicolon>lsp-object Class Interface Struct<ret>' -docstring 'LSP class interface or struct'
    map global object d '<a-semicolon>lsp-diagnostic-object --include-warnings<ret>' -docstring 'LSP errors and warnings'
    map global object D '<a-semicolon>lsp-diagnostic-object<ret>' -docstring 'LSP errors'
}

hook global NormalKey y|d|c %{
    nop %sh{
        encoded=$(printf %s "$kak_main_reg_dquote" | base64 -w 0)
        printf "\033]52;c;%s\a" "$encoded" >/dev/tty
    }
}
