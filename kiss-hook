#!/bin/sh -e

flagsed() {
    export CFLAGS="$(printf %s "$CFLAGS" | sed "$1")"
    export CXXFLAGS="$(printf %s "$CXXFLAGS" | sed "$1")"
    export LDFLAGS="$(printf %s "$LDFLAGS" | sed "$1")"
}

saneflags() {
    log "$PKG" "Using sane build flags"

    export CFLAGS="-O2 -pipe -march=native"
    export CXXFLAGS="$CFLAGS"
    unset LDFLAGS
}

nolto() {
    log "$PKG" "LTO disabled"

    flagsed "s/-flto=auto//g"
}

addflag() {
    log "$PKG" "Flag added: $1"

    flagsed "s/$/ $1/g"
}

delflag() {
    log "$PKG" "Flag removed: $1"

    flagsed "s/$1//g"
}

musl() {
    kiss list musl

    log "$PKG" "Using musl-gcc"

    addflag "-static"
    export CC=musl-gcc
}

case "$TYPE" in
    pre-build)
        export _CC="${CC:-gcc}"
        export _CFLAGS="$CFLAGS"
        export _CXXFLAGS="$CXXFLAGS"
        export _LDFLAGS="$LDFLAGS"

        case "$PKG" in
            alsa-lib | efivar)
                addflag "-flto-partition=none" ;;

            curl | libressl | lua | lzo | ncurses | zlib | zstd)
                addflag "-ffat-lto-objects" ;;

            # These packages have custom configuration to enable LTO
            ffmpeg | gcc | python) nolto ;;

            # Don't bother optimising this cruft
            chromium)
            	saneflags
            	export PATH="/usr/lib/ccache/bin:$PATH"
                ;;
            glibc | llvm | rust) saneflags ;;

            # Statically link a few packages against a sane C library
            busybox | e2fsprogs | gzip | htop  | less  | m4      | mdevd | make | \
            mksh    | nawk-git  | oksh | runit | sbase | skalibs | ssu   | ubase)
                musl ;;

            lib32-*)
                export CC="gcc -m32"
                export CXX="g++ -m32"
                export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"
                ;;
            *)
                [ -f "$repo_dir/depends" ] && grep rust "$repo_dir/depends" && addflag "-ffat-lto-objects" ;;
        esac

        IFS=. read -r _start _ < /proc/uptime
    ;;

    post-build)
        : "${DEST:?DEST is unset}"

        export CC="$_CC"
        export CFLAGS="$_CFLAGS"
        export CXXFLAGS="$_CFLAGS"
        export LDFLAGS="$_LDFLAGS"

        case "$PKG" in
            lib32-glibc) ;;
            lib32-*)
                rm -rf "$3/etc" \
                       "$3/usr/bin" \
                       "$3/usr/include" \
                       "$3/usr/share"
            ;;
        esac

        rm -rf  "$3/usr/share/gettext" \
                "$3/usr/share/polkit-1" \
                "$3/usr/share/info" \
                "$3/usr/share/locale" \
                "$3/usr/lib"*"/gconv"

        IFS=. read -r _end _ < /proc/uptime

        (
            _s=$((_end - _start))
            _h=$((_s / 60 / 60 % 24))
            _m=$((_s / 60 % 60))

            [ "$_h" = 0 ] || _u="${_u}${_h}h "
            [ "$_m" = 0 ] || _u="${_u}${_m}m "

            log "$PKG" "Build finished in ${_u:-${_s}s}"
        )
    ;;

esac
