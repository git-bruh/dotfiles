#!/bin/sh -e

flagsed() {
    CFLAGS="$(printf %s "$CFLAGS" | sed "$1")"
    CXXFLAGS="$(printf %s "$CXXFLAGS" | sed "$1")"
    LDFLAGS="$(printf %s "$LDFLAGS" | sed "$1")"

    export CFLAGS
    export CXXFLAGS
    export LDFLAGS
}

saneflags() {
    log "$PKG" "Using sane build flags"

    export CFLAGS="-O2 -pipe -march=native -mtune=native"
    export CXXFLAGS="$CFLAGS"
    unset LDFLAGS
}

nolto() {
    log "$PKG" "LTO disabled"

    flagsed "s/-flto=auto//"
}

addflag() {
    log "$PKG" "Flag added: $1"

    flagsed "s/$/ $1/"
}

delflag() {
    log "$PKG" "Flag removed: $1"

    flagsed "s/$1//"
}

musl() {
    kiss list musl

    log "$PKG" "Using musl-gcc"

    addflag "-static"
    export CC=musl-gcc
}

case "$TYPE" in
    pre-build)
        export _CC="${CC:-cc}"
        export _CFLAGS="$CFLAGS"
        export _CXXFLAGS="$CXXFLAGS"
        export _LDFLAGS="$LDFLAGS"

        case "$PKG" in
            alsa-lib | efivar)
                addflag "-flto-partition=none" ;;

            curl | libressl | libtermkey | lua | lzo | ncurses | zlib | zstd)
                addflag "-ffat-lto-objects" ;;

            # These packages have custom configuration to enable LTO.
            ffmpeg | python) nolto ;;

            gcc)
                nolto
                delflag "-fipa-pta"
            ;;

            # Can't build the kernel:
            # assertion fail elflink.c:9236
            binutils) delflag "-fipa-pta" ;;

            # ICE:
            # during IPA pass: static-var
            # lto1: internal compiler error: in lto_output_node, at lto-cgraph.c:447
            chromium)
                nolto
                delflag "-fdevirtualize-at-ltrans"
            ;;

            # Custom configuration + clang.
            firefox)
                nolto
                # We use the `lld` linker.
                delflag "-fuse-ld=gold"
                # Unsupported flags.
                delflag "-fipa-pta"
                delflag "-fdevirtualize-at-ltrans"
                delflag "-fgraphite-identity"
                delflag "-floop-nest-optimize"
            ;;

            llvm)
                addflag "-ffat-lto-objects"
                # clang segfaults.
                delflag "-fno-semantic-interposition"
            ;;

            # Broken.
            git | github-cli | nodejs | protobuf | python2 | ruby | rust | strace | \
            webkit2gtk | xorg-server) nolto ;;

            musl)
                nolto
                delflag "-fuse-ld=gold"
            ;;

            # Too much breakage.
            glibc) saneflags ;;

            # Statically link a few packages against a sane C library
            busybox | e2fsprogs | gzip | htop  | less  | m4      | mdevd | make | \
            mksh    | nawk-git  | oksh | runit | sbase | skalibs | ssu   | ubase)
                musl
            ;;

            *)
                if grep rust "$repo_dir/depends" > /dev/null 2>&1; then
                    addflag "-ffat-lto-objects"
                fi
        esac

        IFS=. read -r _start _ < /proc/uptime
    ;;

    post-build)
        : "${DEST:?DEST is unset}"

        export CC="$_CC"
        export CFLAGS="$_CFLAGS"
        export CXXFLAGS="$_CFLAGS"
        export LDFLAGS="$_LDFLAGS"

        rm -rf  "$3/usr/share/gettext" \
                "$3/usr/share/polkit-1" \
                "$3/usr/share/info" \
                "$3/usr/share/locale" \
                "$3/usr/lib/gconv"

        IFS=. read -r _end _ < /proc/uptime

        (
            _s=$((_end - _start))
            _h=$((_s / 60 / 60 % 24))
            _m=$((_s / 60 % 60))

            [ "$_h" = 0 ] || _u="${_u}${_h}h "
            [ "$_m" = 0 ] || _u="${_u}${_m}m "

            log "$PKG" "Build finished in ${_u:-${_s}s}"
        )
    ;;

esac
