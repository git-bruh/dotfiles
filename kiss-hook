#!/bin/sh -e

[ "$KISS_COLOR" = 0 ] || ! [ -t 2 ] ||
    c1='\033[1;33m' c2='\033[1;34m' c3='\033[m'

pid="$(grep "^PPid" "/proc/$$/status" | cut -f 2)"

cac_dir=${XDG_CACHE_HOME:-"${HOME%"${HOME##*[!/]}"}/.cache"}
cac_dir=${cac_dir%"${cac_dir##*[!/]}"}/kiss

proc=${KISS_TMPDIR:="$cac_dir/proc"}
proc=${proc%"${proc##*[!/]}"}/$pid

log() {
    printf '%b%s %b%s%b %s\n' \
        "$c1" "${3:-->}" "${c3}${2:+$c2}" "$1" "$c3" "$2" >&2
}

case "$1" in
    pre-build)
        IFS=. read -r _start _ < /proc/uptime
        printf "%d" "$_start" > "$proc/uptime"
    ;;

    post-build)
        rm -rf  "$3/usr/share/gettext" \
                "$3/usr/share/polkit-1" \
                "$3/usr/share/info" \
                "$3/usr/share/locale" \
                "$3/usr/lib/charset.alias" \
                "$3/usr/lib/gconv"

        IFS=. read -r _end _ < /proc/uptime
        _start="$(cat "$proc/uptime")"

        (
            _s=$((_end - _start))
            _h=$((_s / 60 / 60 % 24))
            _m=$((_s / 60 % 60))

            [ "$_h" = 0 ] || _u="${_u}${_h}h "
            [ "$_m" = 0 ] || _u="${_u}${_m}m "

            log "$2" "Build finished in ${_u:-${_s}s}"
        )
    ;;
esac
